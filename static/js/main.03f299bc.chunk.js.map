{"version":3,"sources":["components/footer/Footer.jsx","components/hero/Hero.jsx","pages/HomePage.jsx","pages/AboutPage.jsx","pages/ContactPage.jsx","App.js","serviceWorker.js","index.js"],"names":["Footer","className","Container","fluid","Row","Col","md","sm","Hero","props","Fragment","Jumbotron","xs","title","subTitle","text","HomePage","AboutPage","ContactPage","App","toggleNavbar","setState","prevState","collapsed","state","headerLinks","path","home","about","contact","Navbar","color","light","bg","expand","NavbarBrand","NavbarToggler","onClick","this","Collapse","isOpen","navbar","Nav","to","exact","render","Component","propTypes","PropTypes","bool","dark","fixed","string","role","oneOfType","tag","func","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.03f299bc.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Container,\r\n    Row,\r\n    Col,\r\n} from 'reactstrap';\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className=\"mt-5\">\r\n            <Container fluid={true}>\r\n                <Row className=\"border-top justify-content-between p-3\">\r\n                    <Col className=\"p-0\" md=\"3\" sm=\"12\">\r\n                        James Ian R. Solima\r\n                    </Col>\r\n                    <Col className=\"p-0 d-flex justify-content-end\" md=\"3\" sm=\"\">\r\n                        Copyright 2019. - James Ian Solima. All Rights Reserved\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport {\r\n    Container,\r\n    Jumbotron,\r\n    Row,\r\n    Col,\r\n} from 'reactstrap';\r\n\r\nfunction Hero(props) {\r\n    return (\r\n        <React.Fragment>\r\n            <Jumbotron className=\"bg-transparent jumbotron-fluid\">\r\n                <Container>\r\n                    <Row className=\"justify-content-center py-5\">\r\n                        <Col md=\"8\" sm=\"12\" xs=\"12\">\r\n                            {props.title && <h1 className=\"display-1 font-weight-bolder\">{props.title}</h1>}\r\n                            {props.subTitle && <h3 className=\"display-4 font-weight-light\">{props.subTitle}</h3>}\r\n                            {props.text && <h3 className=\"lead font-weight-light\">{props.text}</h3>}\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            </Jumbotron>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Hero","import React from 'react';\r\n\r\nimport Hero from '../components/hero/Hero';\r\n\r\nfunction HomePage(props){\r\n    return(\r\n        <React.Fragment>\r\n        <Hero\r\n            title={props.title}\r\n            subTitle={props.subTitle}\r\n            text={props.text}/>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default HomePage","import React from 'react';\r\n\r\nfunction AboutPage(props){\r\n    return(\r\n         <h1>About</h1>\r\n    )\r\n}\r\n\r\nexport default AboutPage","import React from 'react';\r\n\r\nfunction ContactPage(props){\r\n    return(\r\n         <h1>Contact</h1>\r\n    )\r\n}\r\n\r\nexport default ContactPage","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport {\n  Container,\n  Nav,\n  Navbar,\n  NavbarBrand,\n  NavbarToggler,\n  Collapse,\n} from 'reactstrap';\nimport PropTypes from 'prop-types';\n\nimport Footer from './components/footer/Footer';\nimport HomePage from './pages/HomePage';\nimport AboutPage from './pages/AboutPage';\nimport ContactPage from './pages/ContactPage';\n\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      title: 'James Ian Ragasa Solima',\n      headerLinks: [\n        { title: 'Home', path: '/' },\n        { title: 'About', path: '/about' },\n        { title: 'Contact', path: '/contact' }\n      ],\n      home: {\n        title: 'Full Stack Developer',\n        subTitle: 'Developing Skills',\n        text: 'Here are some projects I have done...'\n      },\n      about: {\n        title: 'About Me',\n      },\n      contact: {\n        title: 'Contact Me',\n      },\n      collapsed: true,\n    }\n  }\n\n  toggleNavbar = () => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        collapsed: !this.state.collapsed\n      }\n    })\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n        <Router>\n          <Container\n            className=\"p-0\"\n            fluid={true}>\n            <Navbar\n              color=\"light\"\n              light\n              className=\"border-bottom\"\n              bg=\"transparent\"\n              expand=\"lg\">\n              <NavbarBrand className=\"mr-auto\">James Ian R. Solima</NavbarBrand>\n              <NavbarToggler\n                onClick={this.toggleNavbar}\n                className=\"mr-2 border-0\" />\n              <Collapse isOpen={!this.state.collapsed} navbar>\n                <Nav className=\"ml-auto\" navbar>\n                  <Link className=\"nav-link\" to=\"/\">Home</Link>\n                  <Link className=\"nav-link\" to=\"/about\">About</Link>\n                  <Link className=\"nav-link\" to=\"/contact\">Contact</Link>\n                </Nav>\n              </Collapse>\n            </Navbar>\n            <Route\n              path=\"/\"\n              exact\n              render={() =>\n                <HomePage\n                  title={this.state.home.title}\n                  subTitle={this.state.home.subTitle}\n                  text={this.state.home.text}></HomePage>}>\n            </Route>\n            <Route\n              path=\"/about\"\n              exact\n              render={()=>\n              <AboutPage\n                title={this.state.about.title}></AboutPage>}>\n            </Route>\n            <Route\n              path=\"/contact\"\n              exact\n              render={()=>\n              <ContactPage\n                title={this.state.contact.title}></ContactPage>}>\n            </Route>\n          </Container>\n        </Router>\n\n        <Footer></Footer>\n      </React.Fragment>\n    );\n  }\n}\n\n\nNavbar.propTypes = {\n  light: PropTypes.bool,\n  dark: PropTypes.bool,\n  fixed: PropTypes.string,\n  color: PropTypes.string,\n  role: PropTypes.string,\n  expand: PropTypes.oneOfType([PropTypes.bool, PropTypes.string]),\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string])\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}